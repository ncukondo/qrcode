{
  "version": 3,
  "file": "components.css",
  "sources": [
    "../QRGenerator.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import QRCode from \"qrcode\";\n  import QRSvg from \"qrcode-svg\";\n  let text = \"\";\n  let url = \"\";\n  let option = { type: \"svg\" };\n\n  const debounce = (fn, time) => {\n    let timeout;\n\n    return function() {\n      const functionCall = () => fn.apply(this, arguments);\n      clearTimeout(timeout);\n      timeout = setTimeout(functionCall, time);\n    };\n  };\n\n  const getDataURLFromSVG = svg =>\n    `data:image/svg+xml,${encodeURIComponent(svg)}`;\n\n  const textToDataUrl = async (source, opt) =>\n    opt && opt.type === \"svg\"\n      ? getDataURLFromSVG(new QRSvg(source).svg())\n      : await QRCode.toDataURL(source, opt);\n\n  $: debounce(async () => {\n    url = text ? await textToDataUrl(text, option) : \"\";\n  }, 500)();\n</script>\n\n<style lang=\"css\">.qrframe{margin-top:1rem;width:12em;height:12em}.contents{margin:1em}\n/*# sourceMappingURL=src/components/QRGenerator.svelte.map */</style>\n\n<div\n  class=\"contents container w-1/2 sm:w-auto md:w-full lg:w-64 xl:w-64 center\">\n  <h1>QRCode generater</h1>\n  <div>\n    <div>\n      <input\n        bind:value={text}\n        class=\"shadow appearance-none border rounded w-full py-2 px-3\n        text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" />\n    </div>\n    <div class=\"qrframe border rounded object-center\">\n      {#if url}\n        <img id=\"qrcode\" alt={text} src={url} />\n      {/if}\n    </div>\n  </div>\n\n</div>\n"
  ],
  "names": [],
  "mappings": "AA8BkB,sBAAQ,CAAC,WAAW,IAAI,CAAC,MAAM,IAAI,CAAC,OAAO,IAAI,CAAC,uBAAS,CAAC,OAAO,GAAG,CAAC"
}